<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cast_channel.proto

namespace Cast_channel;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>cast_channel.DeviceAuthMessage</code>
 */
class DeviceAuthMessage extends \Google\Protobuf\Internal\Message
{
    /**
     * Request fields
     *
     * Generated from protobuf field <code>.cast_channel.AuthChallenge challenge = 1;</code>
     */
    protected $challenge = null;
    /**
     * Response fields
     *
     * Generated from protobuf field <code>.cast_channel.AuthResponse response = 2;</code>
     */
    protected $response = null;
    /**
     * Generated from protobuf field <code>.cast_channel.AuthError error = 3;</code>
     */
    protected $error = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Cast_channel\AuthChallenge $challenge
     *           Request fields
     *     @type \Cast_channel\AuthResponse $response
     *           Response fields
     *     @type \Cast_channel\AuthError $error
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\CastChannel::initOnce();
        parent::__construct($data);
    }

    /**
     * Request fields
     *
     * Generated from protobuf field <code>.cast_channel.AuthChallenge challenge = 1;</code>
     * @return \Cast_channel\AuthChallenge|null
     */
    public function getChallenge()
    {
        return isset($this->challenge) ? $this->challenge : null;
    }

    public function hasChallenge()
    {
        return isset($this->challenge);
    }

    public function clearChallenge()
    {
        unset($this->challenge);
    }

    /**
     * Request fields
     *
     * Generated from protobuf field <code>.cast_channel.AuthChallenge challenge = 1;</code>
     * @param \Cast_channel\AuthChallenge $var
     * @return $this
     */
    public function setChallenge($var)
    {
        GPBUtil::checkMessage($var, \Cast_channel\AuthChallenge::class);
        $this->challenge = $var;

        return $this;
    }

    /**
     * Response fields
     *
     * Generated from protobuf field <code>.cast_channel.AuthResponse response = 2;</code>
     * @return \Cast_channel\AuthResponse|null
     */
    public function getResponse()
    {
        return isset($this->response) ? $this->response : null;
    }

    public function hasResponse()
    {
        return isset($this->response);
    }

    public function clearResponse()
    {
        unset($this->response);
    }

    /**
     * Response fields
     *
     * Generated from protobuf field <code>.cast_channel.AuthResponse response = 2;</code>
     * @param \Cast_channel\AuthResponse $var
     * @return $this
     */
    public function setResponse($var)
    {
        GPBUtil::checkMessage($var, \Cast_channel\AuthResponse::class);
        $this->response = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.cast_channel.AuthError error = 3;</code>
     * @return \Cast_channel\AuthError|null
     */
    public function getError()
    {
        return isset($this->error) ? $this->error : null;
    }

    public function hasError()
    {
        return isset($this->error);
    }

    public function clearError()
    {
        unset($this->error);
    }

    /**
     * Generated from protobuf field <code>.cast_channel.AuthError error = 3;</code>
     * @param \Cast_channel\AuthError $var
     * @return $this
     */
    public function setError($var)
    {
        GPBUtil::checkMessage($var, \Cast_channel\AuthError::class);
        $this->error = $var;

        return $this;
    }

}

